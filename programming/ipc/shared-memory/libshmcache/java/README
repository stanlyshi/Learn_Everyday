
the native Java SDK for libshmcache to get config from the share memory.
it can integrate into the spring framework to make development easy.

* directories and descriptions:
|__ jni   C source codes for JNI, use make.sh to compile and install
|__ src   java source codes, use mvn to compile and package
    |__ main/java/org/csource/shmcache/
            |__ ShmCache.java   libshmcache JNI wrapper
            |__ ShmCachePropertyConfigAnnotation.java  helper class for @config() in property file 
            |__ ShmCachePropertyConfigurer.java  sub-class of spring PropertyPlaceholderConfigurer 


* use ShmCache config in the property file:
KEY = @config([keyname][,defaultValue])

keyname: the key name in the share memory, use KEY when keyname is empty
defaultValue: default value for the missed key, empty string when not set

for example:
# get the config value of "app.name" from local share memory
app.name = @config()


* config example in spring xml file:
    <bean id="propertySource" class="org.csource.shmcache.ShmCachePropertyConfigurer">
         <property name="libraryFilename" value="/usr/lib/libshmcachejni.so" />
         <property name="configFilename" value="/etc/libshmcache.conf" />
         <property name="charset" value="UTF-8" />
         <property name="debug" value="true" />
         <property name="locations">
             <list>
                <value>classpath:conf/sysconfig.properties</value>
             </list>
         </property>
    </bean>

the properties for class ShmCachePropertyConfigurer:
  libraryFilename: [required] the full path library filename for libshmcachejni.so
  configFilename:  [required] the full path config filename for libshmcache.conf
  charset:  [optional] the charset for config value, default charset is UTF-8
  debug:    [optional] debug flag, true or 1 for verbose output, default is false



* example for get config use Spring Bean in Serverlet:
...
import org.csource.shmcache.ShmCachePropertyConfigurer;
import org.springframework.context.ApplicationContext;
import org.springframework.web.context.support.WebApplicationContextUtils;
...

  String key = "app.name";
  ApplicationContext ac = WebApplicationContextUtils.getWebApplicationContext(this.getServletContext());
  ShmCachePropertyConfigurer configurer = (ShmCachePropertyConfigurer)ac.getBean("propertySource");
  String value = configurer.getConfig(key);
  ...


* example for get config in natual Java codes:
package xxx;
import org.csource.shmcache.ShmCache;
...

public class XXX {

   static {
     ShmCache.setCharset("UTF-8");
     ShmCache.setLibraryFilename("/usr/lib/libshmcachejni.so");
   }

   ...

   public String get(String key) {
     ShmCache shmCache = ShmCache.getInstance("/etc/libshmcache.conf");
     return shmCache.getString(key);
   }

   ...
}

