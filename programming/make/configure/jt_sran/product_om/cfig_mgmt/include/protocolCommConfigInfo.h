/* Copyright (C) Rong Tao @Sylincom Beijing, 2019年 06月 14日 星期五 09:06:32 CST. */
/* 
 Copyright (C) Rong Tao @Beijing

 Permission is granted to copy, distribute and/or modify this document
 under the terms of the GNU Free Documentation License, Version 1.3
 or any later version published by the Free Software Foundation;
 with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
 Texts. A copy of the license is included in the section entitled ‘‘GNU
 Free Documentation License’’.
   2019年 03月 14日 星期四 19:24:45 CST. 
*/
/* Copyright (C) Rong Tao @Sylincom Beijing, 2019年 03月 08日 星期五 08:10:29 CST. */
/* Copyright (C) Rong Tao @Sylincom Beijing, 2019年 03月 07日 星期四 20:28:03 CST. */
/*
 * Note: this file originally auto-generated by mib2c using
 *  $
 */
#ifndef PROTOCOLCOMMCONFIGINFO_H
#define PROTOCOLCOMMCONFIGINFO_H
#include <sbsconfig_common.h>
/*
 * function declarations 
 */
void            init_protocolCommConfigInfo(void);
void            initialize_table_protocolCommConfigTable(void);
Netsnmp_Node_Handler protocolCommConfigTable_handler;
Netsnmp_First_Data_Point protocolCommConfigTable_get_first_data_point;
Netsnmp_Next_Data_Point protocolCommConfigTable_get_next_data_point;
void            initialize_table_protocolAccessConfigTable(void);
Netsnmp_Node_Handler protocolAccessConfigTable_handler;
Netsnmp_First_Data_Point protocolAccessConfigTable_get_first_data_point;
Netsnmp_Next_Data_Point protocolAccessConfigTable_get_next_data_point;
void            initialize_table_protocolPowerConfigTable(void);
Netsnmp_Node_Handler protocolPowerConfigTable_handler;
Netsnmp_First_Data_Point protocolPowerConfigTable_get_first_data_point;
Netsnmp_Next_Data_Point protocolPowerConfigTable_get_next_data_point;
void            initialize_table_protocolLogConfigTable(void);
Netsnmp_Node_Handler protocolLogConfigTable_handler;
Netsnmp_First_Data_Point protocolLogConfigTable_get_first_data_point;
Netsnmp_Next_Data_Point protocolLogConfigTable_get_next_data_point;


struct protocolCommConfigTable_entry {
    /*
     * Index values
     */
    u_long          protocolCommConfigeIndex;

    /*
     * Column values
     */
    u_long          protocolCommConfigeNodebID;
    u_long          old_protocolCommConfigeNodebID;
    char            protocolCommConfigeNodebIP[STR_LEN_PROTOCOL_16];
    size_t          protocolCommConfigeNodebIP_len;
    char            old_protocolCommConfigeNodebIP[STR_LEN_PROTOCOL_16];
    size_t          old_protocolCommConfigeNodebIP_len;
    char            protocolCommConfigMMEIPAddr[STR_LEN_PROTOCOL_16];
    size_t          protocolCommConfigMMEIPAddr_len;
    char            old_protocolCommConfigMMEIPAddr[STR_LEN_PROTOCOL_16];
    size_t          old_protocolCommConfigMMEIPAddr_len;
    char            protocolCommConfigSGWIPAddr[STR_LEN_PROTOCOL_16];
    size_t          protocolCommConfigSGWIPAddr_len;
    char            old_protocolCommConfigSGWIPAddr[STR_LEN_PROTOCOL_16];
    size_t          old_protocolCommConfigSGWIPAddr_len;
    char            protocolCommConfigFTPIP[STR_LEN_PROTOCOL_16];
    size_t          protocolCommConfigFTPIP_len;
    char            old_protocolCommConfigFTPIP[STR_LEN_PROTOCOL_16];
    size_t          old_protocolCommConfigFTPIP_len;
    u_long          protocolCommConfigCellIdentity;
    u_long          old_protocolCommConfigCellIdentity;
    u_long          protocolCommConfigVBSID;
    u_long          old_protocolCommConfigVBSID;
    char            protocolCommConfigVBSMode[STR_LEN_PROTOCOL];
    size_t          protocolCommConfigVBSMode_len;
    char            old_protocolCommConfigVBSMode[STR_LEN_PROTOCOL];
    size_t          old_protocolCommConfigVBSMode_len;
    char            protocolCommConfigDLBandwidth[STR_LEN_PROTOCOL];
    size_t          protocolCommConfigDLBandwidth_len;
    char            old_protocolCommConfigDLBandwidth[STR_LEN_PROTOCOL];
    size_t          old_protocolCommConfigDLBandwidth_len;
    char            protocolCommConfigULBandwidth[STR_LEN_PROTOCOL];
    size_t          protocolCommConfigULBandwidth_len;
    char            old_protocolCommConfigULBandwidth[STR_LEN_PROTOCOL];
    size_t          old_protocolCommConfigULBandwidth_len;
    u_long          protocolCommConfigFreqBandIndicator;
    u_long          old_protocolCommConfigFreqBandIndicator;
    u_long          protocolCommConfigDLCarrierFreq;
    u_long          old_protocolCommConfigDLCarrierFreq;
    u_long          protocolCommConfigULCarrierFreq;
    u_long          old_protocolCommConfigULCarrierFreq;
    char            protocolCommConfigSubFrameAssignment[STR_LEN_PROTOCOL];
    size_t          protocolCommConfigSubFrameAssignment_len;
    char            old_protocolCommConfigSubFrameAssignment[STR_LEN_PROTOCOL];
    size_t          old_protocolCommConfigSubFrameAssignment_len;
    char            protocolCommConfigSpecialSubFramePat[STR_LEN_PROTOCOL];
    size_t          protocolCommConfigSpecialSubFramePat_len;
    char            old_protocolCommConfigSpecialSubFramePat[STR_LEN_PROTOCOL];
    size_t          old_protocolCommConfigSpecialSubFramePat_len;
    u_long          protocolCommConfigPhyCellID;
    u_long          old_protocolCommConfigPhyCellID;
    u_long          protocolCommConfigTxAntPort;
    u_long          old_protocolCommConfigTxAntPort;
    u_long          protocolCommConfigRxAntPort;
    u_long          old_protocolCommConfigRxAntPort;
    char            protocolCommConfigPlmdID[STR_LEN_PROTOCOL];
    size_t          protocolCommConfigPlmdID_len;
    char            old_protocolCommConfigPlmdID[STR_LEN_PROTOCOL];
    size_t          old_protocolCommConfigPlmdID_len;
    char            protocolCommConfigTrackingAreaCode[STR_LEN_16+1];
    size_t          protocolCommConfigTrackingAreaCode_len;
    char            old_protocolCommConfigTrackingAreaCode[STR_LEN_16+1];
    size_t          old_protocolCommConfigTrackingAreaCode_len;
    long            protocolCommConfigRowStatus;
    long            old_protocolCommConfigRowStatus;

    /*
     * Illustrate using a simple linked list
     */
    int             valid;
    struct protocolCommConfigTable_entry *next;
};

/*
 * Typical data structure for a row entry
 */
struct protocolAccessConfigTable_entry {
/*
 * Index values
 */
u_long          protocolAccessConfigIndex;

/*
 * Column values
 */
char            protocolAccessConfigNumOFRAPreambles[STR_LEN_PROTOCOL];
size_t          protocolAccessConfigNumOFRAPreambles_len;
char            old_protocolAccessConfigNumOFRAPreambles[STR_LEN_PROTOCOL];
size_t          old_protocolAccessConfigNumOFRAPreambles_len;
char            protocolAccessConfigSizeOfRAGroupA[STR_LEN_PROTOCOL];
size_t          protocolAccessConfigSizeOfRAGroupA_len;
char            old_protocolAccessConfigSizeOfRAGroupA[STR_LEN_PROTOCOL];
size_t          old_protocolAccessConfigSizeOfRAGroupA_len;
char            protocolAccessConfigPreambleTransMax[STR_LEN_PROTOCOL];
size_t          protocolAccessConfigPreambleTransMax_len;
char            old_protocolAccessConfigPreambleTransMax[STR_LEN_PROTOCOL];
size_t          old_protocolAccessConfigPreambleTransMax_len;
u_long          protocolAccessConfigMaxHARQMsg3Tx;
u_long          old_protocolAccessConfigMaxHARQMsg3Tx;
long            protocolAccessConfigRowStatus;
long            old_protocolAccessConfigRowStatus;

/*
 * Illustrate using a simple linked list
 */
int             valid;
struct protocolAccessConfigTable_entry *next;
};

struct protocolPowerConfigTable_entry {
    /*
     * Index values
     */
    u_long          protocolPowerConfigIndex;

    /*
     * Column values
     */
    long            protocolPowerConfigQRxLevMin;
    long            old_protocolPowerConfigQRxLevMin;
    long            protocolPowerConfigPMax;
    long            old_protocolPowerConfigPMax;
    char            protocolPowerConfigPInitRecvTarPower[STR_LEN_PROTOCOL];
    size_t          protocolPowerConfigPInitRecvTarPower_len;
    char            old_protocolPowerConfigPInitRecvTarPower[STR_LEN_PROTOCOL];
    size_t          old_protocolPowerConfigPInitRecvTarPower_len;
    long            protocolPowerConfigP0NominalPUSCH;
    long            old_protocolPowerConfigP0NominalPUSCH;
    char            protocolPowerConfigAlpha[STR_LEN_PROTOCOL];
    size_t          protocolPowerConfigAlpha_len;
    char            old_protocolPowerConfigAlpha[STR_LEN_PROTOCOL];
    size_t          old_protocolPowerConfigAlpha_len;
    long            protocolPowerConfigP0NomiPUCCH;
    long            old_protocolPowerConfigP0NomiPUCCH;
    long            protocolPowerConfigRowStatus;
    long            old_protocolPowerConfigRowStatus;

    /*
     * Illustrate using a simple linked list
     */
    int             valid;
    struct protocolPowerConfigTable_entry *next;
};

/*
 * Typical data structure for a row entry
 */
struct protocolLogConfigTable_entry {
/*
 * Index values
 */
long            protocolLogConfigRowStatus;

/*
 * Column values
 */
char            protocolLogConfigIPAddr[STR_LEN_PROTOCOL_16];
size_t          protocolLogConfigIPAddr_len;
char            old_protocolLogConfigIPAddr[STR_LEN_PROTOCOL_16];
size_t          old_protocolLogConfigIPAddr_len;
char            protocolLogConfigMacAddr[STR_LEN_PROTOCOL_13];
size_t          protocolLogConfigMacAddr_len;
char            old_protocolLogConfigMacAddr[STR_LEN_PROTOCOL_13];
size_t          old_protocolLogConfigMacAddr_len;
char            protocolLogConfigPort[STR_LEN_PROTOCOL];
size_t          protocolLogConfigPort_len;
char            old_protocolLogConfigPort[STR_LEN_PROTOCOL];
size_t          old_protocolLogConfigPort_len;
long            old_protocolLogConfigRowStatus;

/*
 * Illustrate using a simple linked list
 */
int             valid;
struct protocolLogConfigTable_entry *next;
};

/*
 * column number definitions for table protocolCommConfigTable 
 */
#define COLUMN_PROTOCOLCOMMCONFIGEINDEX		1
#define COLUMN_PROTOCOLCOMMCONFIGENODEBID		2
#define COLUMN_PROTOCOLCOMMCONFIGENODEBIP		3
#define COLUMN_PROTOCOLCOMMCONFIGMMEIPADDR		4
#define COLUMN_PROTOCOLCOMMCONFIGSGWIPADDR		5
#define COLUMN_PROTOCOLCOMMCONFIGFTPIP		6
#define COLUMN_PROTOCOLCOMMCONFIGCELLIDENTITY		7
#define COLUMN_PROTOCOLCOMMCONFIGVBSID		8
#define COLUMN_PROTOCOLCOMMCONFIGVBSMODE		9
#define COLUMN_PROTOCOLCOMMCONFIGDLBANDWIDTH		10
#define COLUMN_PROTOCOLCOMMCONFIGULBANDWIDTH		11
#define COLUMN_PROTOCOLCOMMCONFIGFREQBANDINDICATOR		12
#define COLUMN_PROTOCOLCOMMCONFIGDLCARRIERFREQ		13
#define COLUMN_PROTOCOLCOMMCONFIGULCARRIERFREQ		14
#define COLUMN_PROTOCOLCOMMCONFIGSUBFRAMEASSIGNMENT		15
#define COLUMN_PROTOCOLCOMMCONFIGSPECIALSUBFRAMEPAT		16
#define COLUMN_PROTOCOLCOMMCONFIGPHYCELLID		17
#define COLUMN_PROTOCOLCOMMCONFIGTXANTPORT		18
#define COLUMN_PROTOCOLCOMMCONFIGRXANTPORT		19
#define COLUMN_PROTOCOLCOMMCONFIGPLMDID		20
#define COLUMN_PROTOCOLCOMMCONFIGTRACKINGAREACODE		21
#define COLUMN_PROTOCOLCOMMCONFIGROWSTATUS		22

/*
 * column number definitions for table protocolAccessConfigTable 
 */
#define COLUMN_PROTOCOLACCESSCONFIGINDEX		1
#define COLUMN_PROTOCOLACCESSCONFIGNUMOFRAPREAMBLES		2
#define COLUMN_PROTOCOLACCESSCONFIGSIZEOFRAGROUPA		3
#define COLUMN_PROTOCOLACCESSCONFIGPREAMBLETRANSMAX		4
#define COLUMN_PROTOCOLACCESSCONFIGMAXHARQMSG3TX		5
#define COLUMN_PROTOCOLACCESSCONFIGROWSTATUS		6

/*
 * column number definitions for table protocolPowerConfigTable 
 */
#define COLUMN_PROTOCOLPOWERCONFIGINDEX		1
#define COLUMN_PROTOCOLPOWERCONFIGQRXLEVMIN		2
#define COLUMN_PROTOCOLPOWERCONFIGPMAX		3
#define COLUMN_PROTOCOLPOWERCONFIGPINITRECVTARPOWER		4
#define COLUMN_PROTOCOLPOWERCONFIGP0NOMINALPUSCH		5
#define COLUMN_PROTOCOLPOWERCONFIGALPHA		6
#define COLUMN_PROTOCOLPOWERCONFIGP0NOMIPUCCH		7
#define COLUMN_PROTOCOLPOWERCONFIGROWSTATUS		8

/*
 * column number definitions for table protocolLogConfigTable 
 */
#define COLUMN_PROTOCOLLOGCONFIGINDEX		1
#define COLUMN_PROTOCOLLOGCONFIGIPADDR		2
#define COLUMN_PROTOCOLLOGCONFIGMACADDR		3
#define COLUMN_PROTOCOLLOGCONFIGPORT		4
#define COLUMN_PROTOCOLLOGCONFIGROWSTATUS		5
#endif                          /* PROTOCOLCOMMCONFIGINFO_H */
